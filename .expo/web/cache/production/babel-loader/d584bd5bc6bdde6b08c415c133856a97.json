{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{CommonActions}from'@react-navigation/routers';import NavigationContext from\"./NavigationContext\";import{NavigationStateContext}from\"./BaseNavigationContainer\";import{PrivateValueStore}from\"./types\";PrivateValueStore;export default function useNavigationHelpers(_ref){var onAction=_ref.onAction,getState=_ref.getState,emitter=_ref.emitter,router=_ref.router;var parentNavigationHelpers=React.useContext(NavigationContext);var _React$useContext=React.useContext(NavigationStateContext),performTransaction=_React$useContext.performTransaction;return React.useMemo(function(){var dispatch=function dispatch(action){performTransaction(function(){var payload=typeof action==='function'?action(getState()):action;var handled=onAction(payload);if(!handled&&process.env.NODE_ENV!=='production'){console.error(\"The action '\".concat(payload.type,\"' with payload '\").concat(JSON.stringify(payload.payload),\"' was not handled by any navigator. If you are trying to navigate to a screen, check if the screen exists in your navigator. If you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/en/nesting-navigators.html#navigating-to-a-screen-in-a-nested-navigator.\"));}});};var actions=_objectSpread({},router.actionCreators,{},CommonActions);var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){return dispatch(actions[name].apply(actions,arguments));};return acc;},{});return _objectSpread({},parentNavigationHelpers,{},helpers,{dispatch:dispatch,emit:emitter.emit,isFocused:parentNavigationHelpers?parentNavigationHelpers.isFocused:function(){return true;},canGoBack:function canGoBack(){var state=getState();return router.getStateForAction(state,CommonActions.goBack(),{routeNames:state.routeNames,routeParamList:{}})!==null||(parentNavigationHelpers===null||parentNavigationHelpers===void 0?void 0:parentNavigationHelpers.canGoBack())||false;}});},[router,getState,parentNavigationHelpers,emitter.emit,performTransaction,onAction]);}","map":{"version":3,"sources":["useNavigationHelpers.tsx"],"names":["PrivateValueStore","router","parentNavigationHelpers","React","performTransaction","dispatch","action","payload","getState","handled","onAction","process","console","JSON","actions","helpers","acc","emit","emitter","isFocused","canGoBack","state","CommonActions","routeNames","routeParamList"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport { NavigationStateContext } from './BaseNavigationContainer';\nimport { NavigationEventEmitter } from './useEventEmitter';\nimport { NavigationHelpers, NavigationProp, PrivateValueStore } from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n  const { performTransaction } = React.useContext(NavigationStateContext);\n\n  return React.useMemo(() => {\n    const dispatch = (action: Action | ((state: State) => Action)) => {\n      performTransaction(() => {\n        const payload =\n          typeof action === 'function' ? action(getState()) : action;\n\n        const handled = onAction(payload);\n\n        if (!handled && process.env.NODE_ENV !== 'production') {\n          console.error(\n            `The action '${payload.type}' with payload '${JSON.stringify(\n              payload.payload\n            )}' was not handled by any navigator. If you are trying to navigate to a screen, check if the screen exists in your navigator. If you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/en/nesting-navigators.html#navigating-to-a-screen-in-a-nested-navigator.`\n          );\n        }\n      });\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-ignore\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined);\n  }, [\n    router,\n    getState,\n    parentNavigationHelpers,\n    emitter.emit,\n    performTransaction,\n    onAction,\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}