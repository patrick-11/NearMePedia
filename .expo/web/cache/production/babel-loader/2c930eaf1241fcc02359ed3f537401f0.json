{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import*as React from'react';export default function useEventEmitter(){var listeners=React.useRef({});var create=React.useCallback(function(target){var removeListener=function removeListener(type,callback){var callbacks=listeners.current[type]?listeners.current[type][target]:undefined;if(!callbacks){return;}var index=callbacks.indexOf(callback);callbacks.splice(index,1);};var addListener=function addListener(type,callback){listeners.current[type]=listeners.current[type]||{};listeners.current[type][target]=listeners.current[type][target]||[];listeners.current[type][target].push(callback);return function(){return removeListener(type,callback);};};return{addListener:addListener,removeListener:removeListener};},[]);var emit=React.useCallback(function(_ref){var _ref2;var type=_ref.type,data=_ref.data,target=_ref.target,canPreventDefault=_ref.canPreventDefault;var items=listeners.current[type]||{};var callbacks=target!==undefined?items[target]&&items[target].slice():(_ref2=[]).concat.apply(_ref2,_toConsumableArray(Object.keys(items).map(function(t){return items[t];})));var event={get type(){return type;}};if(data!==undefined){Object.defineProperty(event,'data',{get:function get(){return data;}});}if(canPreventDefault){var defaultPrevented=false;Object.defineProperties(event,{defaultPrevented:{get:function get(){return defaultPrevented;}},preventDefault:{value:function value(){defaultPrevented=true;}}});}callbacks===null||callbacks===void 0?void 0:callbacks.forEach(function(cb){return cb(event);});return event;},[]);return React.useMemo(function(){return{create:create,emit:emit};},[create,emit]);}","map":{"version":3,"sources":["useEventEmitter.tsx"],"names":["listeners","React","create","target","removeListener","callbacks","index","addListener","emit","canPreventDefault","items","Object","t","event","data","get","defaultPrevented","preventDefault","value","cb"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { EventEmitter, EventConsumer, EventArg } from './types';\n\nexport type NavigationEventEmitter = EventEmitter<Record<string, any>> & {\n  create: (target: string) => EventConsumer<Record<string, any>>;\n};\n\ntype Listeners = ((data: any) => void)[];\n\n/**\n * Hook to manage the event system used by the navigator to notify screens of various events.\n */\nexport default function useEventEmitter(): NavigationEventEmitter {\n  const listeners = React.useRef<Record<string, Record<string, Listeners>>>({});\n\n  const create = React.useCallback((target: string) => {\n    const removeListener = (type: string, callback: (data: any) => void) => {\n      const callbacks = listeners.current[type]\n        ? listeners.current[type][target]\n        : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      const index = callbacks.indexOf(callback);\n\n      callbacks.splice(index, 1);\n    };\n\n    const addListener = (type: string, callback: (data: any) => void) => {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n\n      return () => removeListener(type, callback);\n    };\n\n    return {\n      addListener,\n      removeListener,\n    };\n  }, []);\n\n  const emit = React.useCallback(\n    ({\n      type,\n      data,\n      target,\n      canPreventDefault,\n    }: {\n      type: string;\n      data?: any;\n      target?: string;\n      canPreventDefault?: boolean;\n    }) => {\n      const items = listeners.current[type] || {};\n\n      // Copy the current list of callbacks in case they are mutated during execution\n      const callbacks =\n        target !== undefined\n          ? items[target] && items[target].slice()\n          : ([] as Listeners).concat(...Object.keys(items).map(t => items[t]));\n\n      const event: EventArg<any, any, any> = {\n        get type() {\n          return type;\n        },\n      };\n\n      if (data !== undefined) {\n        Object.defineProperty(event, 'data', {\n          get() {\n            return data;\n          },\n        });\n      }\n\n      if (canPreventDefault) {\n        let defaultPrevented = false;\n\n        Object.defineProperties(event, {\n          defaultPrevented: {\n            get() {\n              return defaultPrevented;\n            },\n          },\n          preventDefault: {\n            value() {\n              defaultPrevented = true;\n            },\n          },\n        });\n      }\n\n      callbacks?.forEach(cb => cb(event));\n\n      return event as any;\n    },\n    []\n  );\n\n  return React.useMemo(() => ({ create, emit }), [create, emit]);\n}\n"]},"metadata":{},"sourceType":"module"}